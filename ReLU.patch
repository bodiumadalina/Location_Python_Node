--- /usr/local/lib/python3.6/dist-packages/torch/nn/modules/activation.py
+++ /usr/local/lib/python3.6/dist-packages/torch/nn/modules/activation.py
@@ -11,7 +11,7 @@
           dimensions
         - Output: :math:`(N, *)`, same shape as the input
 
-    .. image:: ../scripts/activation_images/ReLU.png
+    .. image:: scripts/activation_images/ReLU.png
 
     Examples::
 
@@ -27,16 +27,15 @@
         >>> output = torch.cat((m(input),m(-input)))
     """
     __constants__ = ['inplace']
-    inplace: bool
 
-    def __init__(self, inplace: bool = False):
+    def __init__(self, inplace=False):
         super(ReLU, self).__init__()
         self.inplace = inplace
 
-    def forward(self, input: Tensor) -> Tensor:
+    def forward(self, input):
         return F.relu(input, inplace=self.inplace)
 
-    def extra_repr(self) -> str:
+    def extra_repr(self):
         inplace_str = 'inplace=True' if self.inplace else ''
         return inplace_str
 